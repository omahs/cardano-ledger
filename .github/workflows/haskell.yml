name: Haskell CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ "master", "release/*" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    env:
      # Modify this value to "invalidate" the cabal cache.
      CABAL_CACHE_VERSION: "2022-12-30"

      # current ref from: 27.02.2022
      SECP256K1_REF: ac83be33d0956faf6b7f61a60ab524ef7d6a473a

      SECP_CACHE_VERSION: "2022-12-30"

      # OpenSSL is installed in a non-standard location in MacOS. See
      # https://github.com/actions/virtual-environments/blob/main/images/macos/macos-11-Readme.md
      PKG_CONFIG_PATH: ${{ (matrix.os == 'macos-latest' && '/usr/lib/pkgconfig:/usr/local/opt/openssl@1.1/lib/pkgconfig') || (matrix.os == 'ubuntu-latest' && '/usr/lib/pkgconfig:/usr/local/lib/pkgconfig') || '' }}

      # we need the LD_LIBRARY_PATH env var here because we ended up installing libsecp256k1 into /usr/local,
      # pkg-config, *does* return the proper location, but the library does not appear to be properly referenced.
      # FIXME: this is arguably a bug, and pkg-config should return the right values!
      LD_LIBRARY_PATH: ${{ (matrix.os != 'windows-latest' && '/usr/local/lib') || '' }}

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        ghc: ["8.10.7", "9.2.4"]
        os: [ubuntu-latest]

    steps:
    - uses: actions/checkout@v1

    - name: Set up Ruby 2.7
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.7

    - name: Install cbor-diag and cddl
      run: |
        gem install cddl -v 0.8.15
        gem install cbor-diag

    - name: Install libsodium
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get -y install libsodium23 libsodium-dev
        sudo apt-get -y remove --purge software-properties-common
        sudo apt-get -y autoremove

     # this seems to break something. It _must_ come after the pacman setup
     # above. It appears as if PATHEXT is set _after_ ghcup install ghc/cabal, and
     # as such we'd need pacman.exe instead.
    - name: Setup Haskell
      run: |
        # Use GHCUP to manage ghc/cabal
        ghcup install ghc --set ${{ matrix.ghc }}
        ghcup install cabal --set 3.8.1.0

        ghc --version
        cabal --version

    # Unify the computation of the cabal store directory to a single step. This makes referencing the cabal
    # store in later steps easier.
    #
    # We know on cabal store is located in the following locations by OS:
    #
    #   Linux: /home/runner/.cabal/store
    #   MacOS: /Users/runner/.cabal/store
    #   Windows: C:\cabal\store
    #
    # However, we compute these as best be can from information cabal provides in case this changes in the future.
    - name: "Setup cabal-store"
      id: cabal-store
      shell: bash
      run: |
        cabal help user-config
        cabal_config_file="$(cabal help user-config | grep -A 1 'You can edit the cabal configuration file to set defaults' | tail -n 1 | xargs)"

        if [[ '${{ runner.os }}' != 'Windows' ]]; then
          echo "cabal-store=$(dirname "$cabal_config_file")/store" | tee -a "$GITHUB_OUTPUT"
        else
          echo "cabal-store=C:\\cabal\\store" | tee -a "$GITHUB_OUTPUT"
        fi

    - name: Install secp256k1
      uses: input-output-hk/setup-secp256k1@v1
      with:
        git-ref: ${{ env.SECP256K1_REF }}
        cache-version: ${{ env.SECP_CACHE_VERSION }}

    - name: Configure to use libsodium
      run: |
        cat >> cabal.project <<EOF
        package cardano-crypto-praos
          flags: -external-libsodium-vrf
        EOF

    - name: Cabal update
      run: cabal update

    - name: Cabal Configure
      run: cabal configure --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - uses: actions/cache@v2
      if: matrix.os != 'macos-latest'
      name: Cache cabal store
      with:
        path: |
          ${{ steps.cabal-store.outputs.cabal-store }}
          dist
        key: cache-${{ env.CABAL_CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-${{ github.sha }}
        restore-keys: cache-${{ env.CABAL_CACHE_VERSION }}-${{ runner.os }}-${{ matrix.ghc }}-v1-${{ hashFiles('cabal-cache.cabal') }}-

    - name: Install dependencies
      run: cabal build all --only-dependencies

    - name: Build
      run: cabal build all

    - name: Git clone
      run: git clone https://github.com/input-output-hk/cardano-mainnet-mirror

    - name: Run tests
      run: |
        export CARDANO_MAINNET_MIRROR="$(pwd)/cardano-mainnet-mirror/epochs"
        cabal test all

  fourmolu:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v1

    - name: Install fourmolu
      run: |
        mkdir -p "$HOME/.local/bin"
        curl -sL https://github.com/fourmolu/fourmolu/releases/download/v0.10.1.0/fourmolu-0.10.1.0-linux-x86_64 -o "$HOME/.local/bin/fourmolu"
        chmod a+x "$HOME/.local/bin/fourmolu"
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Run fourmolu
      run: ./scripts/fourmolize.sh
